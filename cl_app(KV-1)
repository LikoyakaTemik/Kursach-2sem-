#include "cl_app.h"
#include "cl_base.h"
#include "cl_prod.h"
cl_app::cl_app(cl_base* p_head_object):cl_base(p_head_object){}

void cl_app::build_tree_objects(){
	cl_base* pointer = this;
	vector <string> objects;	
	string command;
	getline(cin, command, '\n');
	set_s_object_name(command);
	string current_object;
	while(true){
		objects.clear();
		getline(cin, command, '\n');
		for(int i = 0; i < command.size(); ++i){
			string obj_name = "";
			while(command[i] != ' ' && i < command.size()){
				obj_name = obj_name + command[i];
				++i;
			}
			objects.push_back(obj_name);
		}
		if(objects[0] != objects[1]){
			if(objects[0] == pointer->get_s_object_name()){
				if(pointer->get_p_child(objects[1]) == nullptr){
					cl_prod* ob;
					for(int i = 1; i < objects.size(); ++i){
						ob = new cl_prod(pointer, objects[i]);	
					}
					current_object = objects[1];
					pointer = this;					
				}
			}
			else{
				if(objects[0] == current_object){
					pointer = pointer->get_p_child(objects[0]);
					if(pointer->get_p_child(objects[1]) == nullptr){
						cl_prod* ob;
						for(int i = 1; i < objects.size(); ++i){
							ob = new cl_prod(pointer, objects[i]);	
						}
						current_object = objects[1];
					}
				}
			}
		}
		else{
			return;	
		}
	}
}

int cl_app::exec_app(){
	print_s_object_name_tree(this, 1);
	return 0;
}

cl_app::~cl_app(){}
